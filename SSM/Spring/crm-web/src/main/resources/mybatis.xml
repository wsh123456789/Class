<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd"> -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">

 <context:property-placeholder location="classpath:db.properties"/>
 <!-- 
 	1.配置数据源  dataSource:操作数据库的资源信息；当你通过用户名密码连接成功之后，
 	datasource（对象）是可以获取数据库资源的方法。
  -->
 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
 	<property name="driverClassName" value="${mysql.driver}"></property>
 	<property name="url" value="${mysql.url}"></property>
 	<property name="username" value="${mysql.user}"></property>
 	<property name="password" value="${mysql.pwd}"></property>
 </bean>
 
 <!--2.spring整合mybatis的session工厂   sqlSession     把操作数据库的功能赋值给datasource-->
 <!-- 数据库连接池： -->
 <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
 	<!-- 注入DataSource数据源 -->
 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 
 <!--3.当我们把mapper的路径交给mybatis管理后，他会自动进行绑定，但是名称必须一致，
 并且mapper.xml中namespace必须要和接口路径一致，就可以自动绑定。   -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 	<!-- 配置扫描的mapper文件所在的包 -->
 	<property name="basePackage" value="com.wsh.mapper"></property>
 </bean> 
 
 <!--4.配置扫描service层对象，现在已经把扫描的任务给到了spring,单独管理sql  -->

 <!--5.开启注解事务  -->
 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 	<!-- 配置数据源 -->
 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 <!--  开启事务注解-->
 <tx:annotation-driven transaction-manager="transactionManager"/>
 
</beans>