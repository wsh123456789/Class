server:
  port: 10010 # 网关端口
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos地址
    gateway:
      routes: # 网关路由配置规则  集合
      - id: user-service # 路由id，自定义，只要唯一即可
#        uri: http://127.0.0.1:8081 # 静态路由 路由的目标地址 http就是固定地址
        uri: lb://userService # 动态路由 路由的目标地址(http://localhost:8081/) lb就是负载均衡，后面跟服务名称
        predicates: # 路由断言，也就是判断请求是否符合路由规则的条件 可以设置多个断言
          - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求
          - Before=2024-11-29T17:42:47.789-07:00[Asia/Shanghai] #是否符合时间条件
#        filters: #路由过滤器设置  可以设置一组过滤规则
#          - AddRequestHeader=Header,hello world! #添加请求头  1
#          - xxxRequestHeader=Header,hello world! #添加请求头  2
#          - AddRequestHeader=Header,hello world! #添加请求头  3
#          - AddRequestHeader=Header,hello world! #添加请求头  4
      - id: order-service # 路由id，自定义，只要唯一即可
#        uri: http://127.0.0.1:8082 # 路由的目标地址(http://localhost:8082) http就是固定地址
        uri: lb://orderService
        predicates:
          - Path=/order/**
#          - Before=2022-11-29T17:42:47.789-07:00[Asia/Shanghai]
#      default-filters:  #默认过滤器
#        - AddRequestHeader=Truth,hello world! 1
#        - ARequestHeader=Truth,hello world! 2
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求 列如:10.1.140.208:8086  设置:/** 默认都可以访问
              - "/**"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期
